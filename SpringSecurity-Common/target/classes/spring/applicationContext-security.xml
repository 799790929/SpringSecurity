<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
                        
     <beans:bean id="loggerListener" class="org.springframework.security.access.event.LoggerListener" />
    <!-- <beans:import resource="classpath*:spring/applicationContext-ss.xml"/> -->
    <http pattern="/scripts/**" security="none"/>
    <http pattern="/styles/**" security="none"/>
    <http pattern="/images/**" security="none"/>
    <http pattern="/widgets/**" security="none"/>
    <http pattern="/login.jsp" security="none"/>
    <http pattern="/services/**" security="none"/>
    <http pattern="/js/**" security="none"/>
    
    <http use-expressions="true" entry-point-ref="authenticationProcessingFilterEntryPoint" ><!-- access-denied-page="/403.jsp" -->
        <access-denied-handler ref="MyAccessDeniedHandler"/>
        <!-- <logout/> -->
        <!-- 实现免登陆验证 -->
        <!-- <remember-me /> -->
        <!-- 匿名登录 -->
        <anonymous enabled="false"/>
        <session-management invalid-session-url="/timeout.jsp" session-authentication-strategy-ref="sas">
        </session-management>
        <custom-filter position="CONCURRENT_SESSION_FILTER"  ref="concurrencyFilter" />
       	<custom-filter ref="loginFilter" position="FORM_LOGIN_FILTER"  />
		<custom-filter ref="securityFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
    </http>
    
    <!-- 登录验证器 -->
    <beans:bean id="loginFilter" class="cn.sf.ss.security.MyUsernamePasswordAuthenticationFilter">
		<!-- 处理登录 -->
		<beans:property name="filterProcessesUrl" value="/login"></beans:property>
		<beans:property name="sessionAuthenticationStrategy" ref="sas"/>
		<beans:property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler"></beans:property>
		<beans:property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler"></beans:property>
		<beans:property name="authenticationManager" ref="myAuthenticationManager"></beans:property>
		<beans:property name="usersDao" ref="usersDao"></beans:property>
	</beans:bean>
	<beans:bean id="loginLogAuthenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/ss/Users/doList.do"></beans:property>
	</beans:bean>
	<beans:bean id="simpleUrlAuthenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/login.jsp"></beans:property>
	</beans:bean>
	
	<!-- 验证不通过处理 -->
	<beans:bean id="MyAccessDeniedHandler" class="cn.sf.ss.security.MyAccessDeniedHandler"></beans:bean>
	
    <!-- 认证过滤器 -->
    <beans:bean id="securityFilter" class="cn.sf.ss.security.MyFilterSecurityInterceptor">
    	<!-- 用户拥有的权限 -->
    	<beans:property name="authenticationManager" ref="myAuthenticationManager" />
    	<!-- 用户是否拥有所请求资源的权限 -->
    	<beans:property name="accessDecisionManager" ref="myAccessDecisionManager" />
    	<!-- 资源与权限对应关系 -->
    	<beans:property name="securityMetadataSource" ref="mySecurityMetadataSource" />
    </beans:bean>
    <!-- 实现了UserDetailsService的Bean -->
    <authentication-manager alias="myAuthenticationManager">
        <authentication-provider user-service-ref="myUserDetailService" />
    </authentication-manager>
    <beans:bean id="myAccessDecisionManager" class="cn.sf.ss.security.MyAccessDecisionManager"></beans:bean>
	<beans:bean id="mySecurityMetadataSource" class="cn.sf.ss.security.MyInvocationSecurityMetadataSource">
		<beans:constructor-arg name="resourcesDao" ref="resourcesDao"></beans:constructor-arg>
		<beans:constructor-arg name="rolesDao" ref="rolesDao"></beans:constructor-arg>
	</beans:bean>
	<beans:bean id="myUserDetailService" class="cn.sf.ss.security.MyUserDetailService">
		<beans:property name="usersDao" ref="usersDao"></beans:property>
		<beans:property name="groupsDao" ref="groupsDao"></beans:property>
		<beans:property name="rolesDao" ref="rolesDao"></beans:property>
	</beans:bean>
	
	<!-- 未登录的切入点 -->
	<beans:bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login.jsp"></beans:property>
	</beans:bean>
	
	
	
	<!-- sessionManagementFilter -->
	<beans:bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter"> 
		<!-- 每次有http请求时校验，看你当前的session是否是过期的 -->
		<beans:property name="sessionRegistry" ref="sessionRegistry"/> 
		<beans:property name="expiredUrl" value="/failure.jsp"/> 
	</beans:bean> 
	<beans:bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
		<!-- 用户登入登出的控制 -->
		<beans:constructor-arg name="sessionRegistry" ref="sessionRegistry"/> 
		<beans:property name="maximumSessions" value="2"/> 
		<beans:property name="exceptionIfMaximumExceeded" value="true"/> 
	</beans:bean> 
	<beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" /><!-- 存放session中的信息，并做处理 -->
</beans:beans>
