<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">  
<!-- 命名空间路径采用实体类完整路径 -->  
<sqlMap namespace="trGroupRole" >  
    <resultMap id="trGroupRoleResult" class="com.byron.ss.model.GroupsRoles">
        <result column="ID_GROUP_ROLE" property="id" />
        <result column="GRP_ID" property="groupId" />
        <result column="ROLE_ID" property="roleId" />
        <result column="GROUP_NAME" property="groupName" />
        <result column="ROLE_NAME" property="roleName" />
        <result column="CREATEDT" property="createdt" />
        <result column="UPDATEDT" property="updatedt" />
        <result column="CREATE_NAME" property="createName" />
        <result column="UPDATE_NAME" property="updateName" />
    </resultMap>
    <sql id="sqlWhere">
	    <dynamic prepend="WHERE">
	       <isNotEmpty prepend="AND" property="id">
	             ID_GROUP_ROLE = #id#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="groupId">
	             GRP_ID = #groupId#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="roleId">
	             ROLE_ID = #roleId#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="groupName">
	             GROUP_NAME = #groupName#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="roleName">
	             ROLE_NAME = #roleName#
	       </isNotEmpty>
	       <!-- <isNotEmpty prepend="AND" property="createdtBegin">
	             CREATEDT >= #createdtBegin#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="createdtEnd">
	             CREATEDT &lt;= #createdtEnd#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="updatedtBegin">
	             UPDATEDT >= #updatedtBegin#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="updatedtEnd">
	             UPDATEDT &lt;= #updatedtEnd#
	       </isNotEmpty> -->
	       <isNotEmpty prepend="AND" property="createName">
	             CREATE_NAME = #createName#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="updateName">
	             UPDATE_NAME = #updateName#
	       </isNotEmpty>
	    </dynamic>	
	</sql>
    <insert id="insert" parameterClass="com.byron.ss.model.GroupsRoles">
	    <selectKey keyProperty="id" resultClass="java.lang.String">  
	        select  replace(uuid(),'-','')   from dual  
	    </selectKey>
        insert into tr_group_role (ID_GROUP_ROLE, GRP_ID, ROLE_ID, GROUP_NAME, ROLE_NAME, CREATEDT,
            UPDATEDT, CREATE_NAME, UPDATE_NAME)
        values (#id#, #groupId#, #roleId#, #groupName#, #roleName#, #createdt#, #updatedt#,
            #createName#, #updateName#)
    </insert>
    <update id="updateByPrimaryKey" parameterClass="com.byron.ss.model.GroupsRoles">
        update tr_group_role
        set GRP_ID = #groupId#,
            ROLE_ID = #roleId#,
            GROUP_NAME = #groupName#,
            ROLE_NAME = #roleName#,
            CREATEDT = #createdt#,
            UPDATEDT = #updatedt#,
            CREATE_NAME = #createName#,
            UPDATE_NAME = #updateName#
        where ID_GROUP_ROLE = #id#
    </update>
    <update id="updateByPrimaryKeySelective" parameterClass="com.byron.ss.model.GroupsRoles">
        update tr_group_role
        <dynamic prepend="set">
            <isNotNull prepend="," property="groupId">
                GRP_ID = #grpId#
            </isNotNull>
            <isNotNull prepend="," property="roleId">
                ROLE_ID = #roleId#
            </isNotNull>
            <isNotNull prepend="," property="groupName">
                GROUP_NAME = #groupName#
            </isNotNull>
            <isNotNull prepend="," property="roleName">
                ROLE_NAME = #roleName#
            </isNotNull>
            <isNotNull prepend="," property="createdt">
                CREATEDT = #createdt#
            </isNotNull>
            <isNotNull prepend="," property="updatedt">
                UPDATEDT = #updatedt#
            </isNotNull>
            <isNotNull prepend="," property="createName">
                CREATE_NAME = #createName#
            </isNotNull>
            <isNotNull prepend="," property="updateName">
                UPDATE_NAME = #updateName#
            </isNotNull>
        </dynamic>
        where ID_GROUP_ROLE = #id#
    </update>
    <delete id="deleteByPrimaryKey" parameterClass="java.lang.String">
        delete from tr_group_role
        where ID_GROUP_ROLE = #id#
    </delete>
    <select id="getByPrimaryKey" resultMap="trGroupRoleResult" parameterClass="java.lang.String">
        select ID_GROUP_ROLE, GRP_ID, ROLE_ID, GROUP_NAME, ROLE_NAME, CREATEDT, UPDATEDT,
            CREATE_NAME, UPDATE_NAME
        from tr_group_role
        where ID_GROUP_ROLE = #id#
    </select>  
    
    <select id="queryByMap" resultMap="trGroupRoleResult" parameterClass="java.util.HashMap">
        select ID_GROUP_ROLE, GRP_ID, ROLE_ID, GROUP_NAME, ROLE_NAME, CREATEDT, UPDATEDT,
            CREATE_NAME, UPDATE_NAME
        from tr_group_role
        <include refid="sqlWhere"/>
    </select>  
    
    <select id="queryByModel" resultMap="trGroupRoleResult" parameterClass="grouprole">
        select ID_GROUP_ROLE, GRP_ID, ROLE_ID, GROUP_NAME, ROLE_NAME, CREATEDT, UPDATEDT,
            CREATE_NAME, UPDATE_NAME
        from tr_group_role
        <include refid="sqlWhere"/>
    </select>  
    
    <select id="findAll" resultMap="trGroupRoleResult">
        select ID_GROUP_ROLE, GRP_ID, ROLE_ID, GROUP_NAME, ROLE_NAME, CREATEDT, UPDATEDT,
            CREATE_NAME, UPDATE_NAME
        from tr_group_role
    </select> 
	 
    <select id="count" resultClass="long">
        SELECT count(*) FROM tr_group_role <include refid="sqlWhere"/>    
    </select>
    <select id="countBySqlWhere" resultClass="long">
        SELECT count(*) FROM tr_group_role #sqlWhere#    
    </select>
    
    <!--  -->
    <delete id="deleteByModel" parameterClass="com.byron.ss.model.GroupsRoles">
        delete from tr_group_role
        where 1=1 
        <isNotNull property="groupId">
        	and grp_id = #groupId#
        </isNotNull>
        <isNotNull property="roleId">
        	and role_id = #roleId#
        </isNotNull>
    </delete>
</sqlMap>  